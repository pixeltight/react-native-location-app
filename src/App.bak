import React, { Component } from 'react'
import { StyleSheet, View } from 'react-native'
import { connect } from 'react-redux'

import PlaceInput from './src/components/PlaceInput/PlaceInput'
import PlaceList from './src/components/PlaceList/PlaceList'
import PlaceDetail from './src/components/PlaceDetail/PlaceDetail'
import { addPlace, deletePlace, selectPlace, deselectPlace } from './src/store/actions/index'
// import placeImage from './src/assets/DDP-2.jpg'

class App extends Component {
  handleAddPlace = placeName => {
    this.props.onAddPlace(placeName)
    // console.log('Added Placename: ', placeName)
  }

  handleDeletePlace = () => {
    this.props.onDeletePlace()
  }

  handleCloseModal = () => {
    this.props.onDeselectPlace()
  }

  handleSelectPlace = key => {
    this.props.onSelectPlace(key)
  }

  render () {
    return (
      <View style={styles.container}>
        <PlaceDetail
          selectedPlace={this.props.selectedPlace}
          onItemDeleted={this.handleDeletePlace}
          onModalClosed={this.handleCloseModal} />
        <PlaceInput
          onPlaceAdded={this.handleAddPlace} />
        <PlaceList
          places={this.props.places}
          onItemSelected={this.handleSelectPlace} />
      </View>
    )
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'flex-start',
    alignItems: 'center',
    backgroundColor: '#fff',
    paddingTop: 26,
    paddingLeft: 10,
    paddingRight: 10
  }
})

const mapStateToProps = state => {
  return {
    places: state.places.places,
    selectedPlace: state.places.selectedPlace
  }
}

const mapDispatchToProps = dispatch => {
  return {
    onAddPlace: name => dispatch(addPlace(name)),
    onDeletePlace: () => dispatch(deletePlace()),
    onSelectPlace: key => dispatch(selectPlace(key)),
    onDeselectPlace: () => dispatch(deselectPlace())
  }
}

export default connect(mapStateToProps, mapDispatchToProps)(App)
